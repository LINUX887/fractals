from PIL import Image
import numpy as np
import time

# Размеры изображения
width, height = 512, 512

# Область комплексной плоскости
xa, xb = -2.0, 1.0
ya, yb = -1.5, 1.5
maxIt = 255

# Создаем новое изображение
img = Image.new('RGB', (width, height), (0, 0, 0))
pixels = img.load()

start_time = time.time()

# Используем numpy для векторизации вычислений
x = np.linspace(xa, xb, width)
y = np.linspace(ya, yb, height)

for py in range(height):
    zy = y[py]
    for px in range(width):
        zx = x[px]
        z = complex(zx, zy)
        c = z
        for i in range(maxIt):
            if abs(z) > 2.0:
                break
            z = z * z + c
            
        # Если точка внутри множества (цикл дошел до конца), цвет черный
        if i == maxIt - 1:
            color = (0, 0, 0)
        else:
            # Иначе используем схему цветов
            color = (i % 4 * 64, i % 8 * 32, i % 16 * 16)
            
        pixels[px, py] = color

end_time = time.time()
print(f"Время выполнения: {end_time - start_time:.2f} секунд")

# Показываем изображение
img.show()
# Опционально сохраняем изображение
img.save('mandelbrot.png')
